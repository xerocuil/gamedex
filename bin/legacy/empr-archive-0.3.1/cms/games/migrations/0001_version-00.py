# Generated by Django 4.1.5 on 2023-05-13 14:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="App",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, unique=True)),
                ("description", models.TextField(blank=True, max_length=1024)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Platform",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, unique=True)),
                ("slug", models.CharField(max_length=64, unique=True)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="platform/logos/"
                    ),
                ),
                (
                    "icon",
                    models.ImageField(
                        blank=True, null=True, upload_to="platform/icons/"
                    ),
                ),
                (
                    "platform_type",
                    models.CharField(
                        blank=True,
                        choices=[("APP", "Application"), ("EMU", "Emulator")],
                        max_length=10,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64, unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=128, unique=True)),
                ("sort_title", models.CharField(max_length=128, unique=True)),
                ("description", models.TextField(blank=True, max_length=1024)),
                ("developer", models.CharField(blank=True, max_length=128)),
                ("publisher", models.CharField(blank=True, max_length=128)),
                (
                    "esrb",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("E", "Everyone"),
                            ("E10", "Everyone 10+"),
                            ("T", "Teen"),
                            ("M", "Mature"),
                            ("AO", "Adults Only"),
                        ],
                        max_length=4,
                        null=True,
                        verbose_name="ESRB",
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("EU", "Europe"),
                            ("NA", "North America"),
                            ("JP", "Japan"),
                        ],
                        default="NA",
                        max_length=2,
                        null=True,
                    ),
                ),
                ("translation", models.BooleanField(default=False)),
                (
                    "release_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Release Date"
                    ),
                ),
                (
                    "store",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BLIZZARD", "Blizzard"),
                            ("GOG", "GOG.com"),
                            ("HUMBLE", "Humble Bundle"),
                            ("ITCH", "itch.io"),
                            ("PSN", "PlayStation Network"),
                            ("STEAM", "Steam"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("controller_support", models.BooleanField(default=True)),
                (
                    "operating_system",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                ("processor", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "ram",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="RAM"
                    ),
                ),
                (
                    "hdd",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="HDD"
                    ),
                ),
                (
                    "gpu",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="GPU"
                    ),
                ),
                (
                    "player",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "1 Player"),
                            ("2", "2 Players"),
                            ("3", "3 Players"),
                            ("4", "4 Players"),
                            ("8", "8 Players"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("co_op", models.BooleanField(default=False)),
                ("online_multiplayer", models.BooleanField(default=False)),
                (
                    "manual",
                    models.FileField(blank=True, null=True, upload_to="games/manual/"),
                ),
                (
                    "boxart",
                    models.ImageField(blank=True, null=True, upload_to="games/boxart/"),
                ),
                (
                    "display",
                    models.ImageField(
                        blank=True, null=True, upload_to="games/display/"
                    ),
                ),
                (
                    "header",
                    models.ImageField(blank=True, null=True, upload_to="games/header/"),
                ),
                (
                    "icon",
                    models.ImageField(blank=True, null=True, upload_to="games/icons/"),
                ),
                (
                    "screenshot",
                    models.ImageField(
                        blank=True, null=True, upload_to="games/screenshot/"
                    ),
                ),
                (
                    "title_image",
                    models.ImageField(blank=True, null=True, upload_to="games/title/"),
                ),
                (
                    "wallpaper",
                    models.ImageField(
                        blank=True, null=True, upload_to="games/wallpaper/"
                    ),
                ),
                ("favorite", models.BooleanField(default=False)),
                ("steam_id", models.IntegerField(blank=True, null=True)),
                (
                    "date_added",
                    models.DateTimeField(auto_now_add=True, verbose_name="Date Added"),
                ),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, verbose_name="Date Modified"),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("path", models.CharField(max_length=128, unique=True)),
                ("archived", models.BooleanField(default=False)),
                (
                    "collection",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="games.collection",
                    ),
                ),
                (
                    "genre",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="games.genre",
                    ),
                ),
                (
                    "platform",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="games.platform",
                    ),
                ),
                ("tags", models.ManyToManyField(blank=True, to="games.tag")),
                (
                    "alt_title",
                    models.CharField(
                        blank=True, max_length=128, null=True, unique=True
                    ),
                ),
                ("save_path", models.CharField(blank=True, max_length=256, null=True)),
                (
                    "engine",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Engine"
                    ),
                ),
            ],
        ),
    ]
